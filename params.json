{
  "name": "Butternut.io",
  "tagline": "Mouth-watering asset compression",
  "body": "# Getting Started\r\n\r\nButternut is a plugin for bundling assets.\r\nIt integrates with multiple frameworks for a seamless deployment experience.\r\n\r\n#### Features\r\n* Custom commands for bundle compression\r\n* Compressed bundle caching\r\n* Bundling and caching of remote assets\r\n* Dev mode, for easy site development with all assets\r\n* Dev-only asset inclusion\r\n* Works with [Octopress](http://octopress.org/)\r\n\r\n## Installation\r\n\r\nCopy or link `asset_bundler.rb` into your `_plugins` folder\r\nfor your project.\r\n\r\nIf your project is in a git repository, you can easily\r\nmanage your plugins by utilizing git submodules.\r\n\r\nTo install this plugin as a git submodule:\r\n\r\n```\r\n    git submodule add git://github.com/ipsum/butternut.git _plugins/asset_bundler`\r\n```\r\n\r\nTo update:\r\n\r\n```\r\n    cd _plugins/asset_bundler\r\n    git pull origin master\r\n```\r\n\r\n## Status\r\n\r\nCurrently only supports absolute asset paths in relation to your\r\nsource directory.  For example: `/css/mystyle.css` looks for a file\r\nin `my_source_dir/css/mystyle.css`.\r\n\r\n#### TODO\r\n\r\n* Relative paths support\r\n* CoffeeScript and LessCSS compilation support\r\n\r\n#### Notes\r\n\r\n**v0.05** - Changed from using Liquid::Tags to Liquid::Blocks.\r\nThis will break on existing bundle markup if you upgrade.\r\n\r\nWhy change it?  Well, Liquid::Tags have to be on one line,\r\nwhereas Liquid::Blocks do not, also it opens up some more\r\nflexibility, as additional options could be included in the\r\ntag text.\r\n\r\n**v0.08** - Changed the `cdn` config parameter to `server_url` in order to be\r\nmore generic.  For the time being, `cdn` still works (see below).\r\n\r\nWhy change it?  There seemed to be a little confusion about the parameter name\r\nand what the parameter does.\r\n\r\n**v0.11** - `jekyll --watch` now turns on dev mode.  Removed code for\r\ncompatibility with versions of Jekyll pre 1.0.\r\n\r\nWhy change it?  `jekyll --watch` isn't really supported by the plugin anyway.\r\nAlso, Jekyll is changing and I don't want this to be any more of an\r\nunmaintainable mess.\r\n\r\n#### Is it production ready?\r\n\r\nConsider this beta software, though for small Jekyll sites you\r\nshould have no problem using it.\r\n\r\n## Usage\r\n\r\nOnce installed in your `_plugins` folder Jekyll Asset Bundler provides\r\nLiquid::Blocks to use which will generate the appropriate\r\nmarkup for including JavaScript and CSS.\r\nEach of the following blocks consumes a [YAML](http://yaml.org)\r\nformatted array.\r\n\r\nThe `dev_assets` tag includes the normal markup for the referenced\r\nassets only in 'dev mode'.  The array items can either be local files\r\nor urls for external scripts and are included as-is.\r\nAt any other time, it does nothing.\r\nIn a future version (hopefully soon), this will play a role in\r\nutilizing things like LessCSS and CoffeeScript.\r\n\r\n## Configuration\r\n\r\nSome behavior can be modified with settings in your `_config.yml`.  The\r\nfollowing represents the default configuration:\r\n\r\n```\r\n    asset_bundler:\r\n      compress:\r\n        js: false\r\n        css: false\r\n      base_path: /bundles/\r\n      server_url:\r\n      remove_bundled: false\r\n      dev: false\r\n      bundle_name: false\r\n      markup_templates:\r\n        js: \"<script type='text/javascript' src='{{url}}'></script>\\n\"\r\n        css: \"<link rel='stylesheet' type='text/css' href='{{url}}' />\\n\"\r\n```\r\n\r\nHere is a breakdown of each configuration option under the top level\r\n`asset_bundler` key.\r\n\r\n### compress:\r\n\r\nCompresses nothing by default. Change the `js` and `css` keys to\r\nmodify compression behavior.\r\n\r\n#### js:\r\n\r\nTo compress with the yui-compressor gem, use 'yui' here,\r\nto compress with the closure compiler gem, use 'closure' here.\r\n\r\n    compress:\r\n      js: yui\r\n\r\nTo compress with a system command, enter it for the\r\nappropriate asset type:\r\n\r\n    compress:\r\n      js: uglifyjs :infile -o :outfile -c\r\n\r\nThis example will run a `uglifyjs` command from your PATH\r\nwhile substituting :outfile and :infile for temporary files\r\nstored in `_asset_bundler_cache`.\r\n\r\nIf either :outfile or :infile are omitted, stdout and\r\nstdin will be used.  *WARNING*, stdin and stdout are done\r\nwith IO.popen , which doesn't work on Windows\r\n\r\n**Note:** Some have reported other issues when using the yui-compressor or\r\nclosure compiler gems on Windows. If you having trouble on windows, try\r\nspecifying a command as outlined above.\r\n\r\n#### css:\r\n\r\nTakes the exact same arguments as `js:`, with the exception\r\nof the Google Closure Compiler ( it's JavaScript only ).\r\n\r\n### base_path:\r\n\r\nWhere the bundles will be copied within your destination\r\nfolder.\r\n\r\nDefault: `/vendor/bundles/`.\r\n\r\n### server_url:\r\n\r\n**NOTE:** In v0.07 and earlier this setting was `cdn`.  The `cdn` key still\r\nworks and will act as an alias.  However, if the `server_url` key is set, it\r\nwill override `cdn`.\r\n\r\nThe root path of your server\\_url or CDN (if you use one).\r\nFor example: http://my-cdn.cloudfront.net/\r\n\r\nJekyll Asset Bundler checks to make sure that this setting ends in a slash.\r\n\r\nDefault: ` ` (blank).\r\n\r\n### remove_bundled:\r\n\r\nIf set to true, will remove the files included in your\r\nbundles from the destination folder.\r\n\r\nDefault: `false`.\r\n\r\n### dev:\r\n\r\n**NOTE:** In v0.10 and earlier, dev mode was not enabled automatically for\r\n`--auto` or `--watch` mode.\r\n\r\nIf set to true, enables dev mode.  When dev mode is active,\r\nno bundles are created and all the referenced files are\r\nincluded individually without modification.\r\n\r\nDev mode is also automatically enabled when using\r\n`jekyll server`, `jekyll --watch` or when a top level configuration key: `dev`\r\nis set to true.\r\n\r\nDefault: `false`.\r\n\r\n### bundle_name:\r\n\r\nOverrides bundle name. When false, MD5 hash of the content is used instead.\r\n\r\nDefault: `false`.\r\n\r\n### markup_templates:\r\n\r\nUse the relevant markup\\_template options to override the default templates\r\nfor inserting bundles.  Each option is parsed with `Liquid::Template.parse`\r\nand passed a `url` (String) parameter.\r\n\r\n**Note:** if you want newlines to be passed in properly, be sure to quote your\r\ntemplates in `_config.yml`.\r\n\r\n#### js:\r\n\r\nThe default JavaScript markup is fairly verbose.  If you would like a modern\r\nreplacement, try `\"<script src='{{url}}'></script>\\n\"`.\r\n\r\nDefault: `\"<script type='text/javascript' src='{{url}}'></script>\\n\"`\r\n\r\n#### css:\r\n\r\nThe default CSS is also verbose.  If you would like a modern\r\nreplacement, try `\"<link rel=stylesheet href='{{url}}'>\\n\"`.\r\n\r\nDefault: `\"<link rel='stylesheet' type='text/css' href='{{url}}' />\\n\"`\r\n\r\n## Dependencies\r\n\r\nJekyll Asset Bundler uses the\r\n[yui-compressor](https://github.com/sstephenson/ruby-yui-compressor) or\r\n[closure-compiler](https://github.com/documentcloud/closure-compiler) gems\r\n(when configured) and (obviously)\r\n[Jekyll](http://jekyllrb.com).\r\n\r\n## Author\r\n\r\nColin Kennedy, moshen on GitHub\r\n\r\n## License\r\n\r\n[MIT](http://colken.mit-license.org),\r\nsee LICENSE file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}